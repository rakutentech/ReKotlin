[{"name":"abstract fun changeRouteSegment(from: RouteSegment, to: RouteSegment, animated: Boolean = false): Routable","description":"org.rekotlin.router.Routable.changeRouteSegment","location":"rekotlin-router/org.rekotlin.router/-routable/change-route-segment.html","searchKeys":["changeRouteSegment","abstract fun changeRouteSegment(from: RouteSegment, to: RouteSegment, animated: Boolean = false): Routable","org.rekotlin.router.Routable.changeRouteSegment"]},{"name":"abstract fun popRouteSegment(routeSegment: RouteSegment, animated: Boolean = false)","description":"org.rekotlin.router.Routable.popRouteSegment","location":"rekotlin-router/org.rekotlin.router/-routable/pop-route-segment.html","searchKeys":["popRouteSegment","abstract fun popRouteSegment(routeSegment: RouteSegment, animated: Boolean = false)","org.rekotlin.router.Routable.popRouteSegment"]},{"name":"abstract fun pushRouteSegment(routeSegment: RouteSegment, animated: Boolean = false): Routable","description":"org.rekotlin.router.Routable.pushRouteSegment","location":"rekotlin-router/org.rekotlin.router/-routable/push-route-segment.html","searchKeys":["pushRouteSegment","abstract fun pushRouteSegment(routeSegment: RouteSegment, animated: Boolean = false): Routable","org.rekotlin.router.Routable.pushRouteSegment"]},{"name":"data class NavigationState(route: Route, animated: Boolean)","description":"org.rekotlin.router.NavigationState","location":"rekotlin-router/org.rekotlin.router/-navigation-state/index.html","searchKeys":["NavigationState","data class NavigationState(route: Route, animated: Boolean)","org.rekotlin.router.NavigationState"]},{"name":"data class Route(segments: List<RouteSegment>)","description":"org.rekotlin.router.Route","location":"rekotlin-router/org.rekotlin.router/-route/index.html","searchKeys":["Route","data class Route(segments: List<RouteSegment>)","org.rekotlin.router.Route"]},{"name":"data class RouteSegment(id: String, args: Any?)","description":"org.rekotlin.router.RouteSegment","location":"rekotlin-router/org.rekotlin.router/-route-segment/index.html","searchKeys":["RouteSegment","data class RouteSegment(id: String, args: Any?)","org.rekotlin.router.RouteSegment"]},{"name":"data class SetRouteAction(route: Route, animated: Boolean) : Action","description":"org.rekotlin.router.SetRouteAction","location":"rekotlin-router/org.rekotlin.router/-set-route-action/index.html","searchKeys":["SetRouteAction","data class SetRouteAction(route: Route, animated: Boolean) : Action","org.rekotlin.router.SetRouteAction"]},{"name":"fun NavigationState(route: Route = Route(), animated: Boolean = true)","description":"org.rekotlin.router.NavigationState.NavigationState","location":"rekotlin-router/org.rekotlin.router/-navigation-state/-navigation-state.html","searchKeys":["NavigationState","fun NavigationState(route: Route = Route(), animated: Boolean = true)","org.rekotlin.router.NavigationState.NavigationState"]},{"name":"fun Route()","description":"org.rekotlin.router.Route.Route","location":"rekotlin-router/org.rekotlin.router/-route/-route.html","searchKeys":["Route","fun Route()","org.rekotlin.router.Route.Route"]},{"name":"fun Route(segments: List<RouteSegment>)","description":"org.rekotlin.router.Route.Route","location":"rekotlin-router/org.rekotlin.router/-route/-route.html","searchKeys":["Route","fun Route(segments: List<RouteSegment>)","org.rekotlin.router.Route.Route"]},{"name":"fun Route(vararg segments: Pair<String, Any?>)","description":"org.rekotlin.router.Route.Route","location":"rekotlin-router/org.rekotlin.router/-route/-route.html","searchKeys":["Route","fun Route(vararg segments: Pair<String, Any?>)","org.rekotlin.router.Route.Route"]},{"name":"fun Route(vararg segments: RouteSegment)","description":"org.rekotlin.router.Route.Route","location":"rekotlin-router/org.rekotlin.router/-route/-route.html","searchKeys":["Route","fun Route(vararg segments: RouteSegment)","org.rekotlin.router.Route.Route"]},{"name":"fun Route(vararg segments: String)","description":"org.rekotlin.router.Route.Route","location":"rekotlin-router/org.rekotlin.router/-route/-route.html","searchKeys":["Route","fun Route(vararg segments: String)","org.rekotlin.router.Route.Route"]},{"name":"fun RouteSegment(id: String, args: Any? = null)","description":"org.rekotlin.router.RouteSegment.RouteSegment","location":"rekotlin-router/org.rekotlin.router/-route-segment/-route-segment.html","searchKeys":["RouteSegment","fun RouteSegment(id: String, args: Any? = null)","org.rekotlin.router.RouteSegment.RouteSegment"]},{"name":"fun RouteSegment(segment: Pair<String, Any?>)","description":"org.rekotlin.router.RouteSegment.RouteSegment","location":"rekotlin-router/org.rekotlin.router/-route-segment/-route-segment.html","searchKeys":["RouteSegment","fun RouteSegment(segment: Pair<String, Any?>)","org.rekotlin.router.RouteSegment.RouteSegment"]},{"name":"fun SetRouteAction(route: Route, animated: Boolean = true)","description":"org.rekotlin.router.SetRouteAction.SetRouteAction","location":"rekotlin-router/org.rekotlin.router/-set-route-action/-set-route-action.html","searchKeys":["SetRouteAction","fun SetRouteAction(route: Route, animated: Boolean = true)","org.rekotlin.router.SetRouteAction.SetRouteAction"]},{"name":"fun navigationReducer(action: Action, oldState: NavigationState?): NavigationState","description":"org.rekotlin.router.navigationReducer","location":"rekotlin-router/org.rekotlin.router/navigation-reducer.html","searchKeys":["navigationReducer","fun navigationReducer(action: Action, oldState: NavigationState?): NavigationState","org.rekotlin.router.navigationReducer"]},{"name":"fun router(rootRoutable: Routable, uiThreadHandler: UiThreadHandler = { it() }): Subscriber<NavigationState>","description":"org.rekotlin.router.router","location":"rekotlin-router/org.rekotlin.router/router.html","searchKeys":["router","fun router(rootRoutable: Routable, uiThreadHandler: UiThreadHandler = { it() }): Subscriber<NavigationState>","org.rekotlin.router.router"]},{"name":"inline fun isEmpty(): Boolean","description":"org.rekotlin.router.Route.isEmpty","location":"rekotlin-router/org.rekotlin.router/-route/is-empty.html","searchKeys":["isEmpty","inline fun isEmpty(): Boolean","org.rekotlin.router.Route.isEmpty"]},{"name":"inline operator fun contains(segment: RouteSegment): Boolean","description":"org.rekotlin.router.Route.contains","location":"rekotlin-router/org.rekotlin.router/-route/contains.html","searchKeys":["contains","inline operator fun contains(segment: RouteSegment): Boolean","org.rekotlin.router.Route.contains"]},{"name":"inline operator fun get(i: Int): RouteSegment","description":"org.rekotlin.router.Route.get","location":"rekotlin-router/org.rekotlin.router/-route/get.html","searchKeys":["get","inline operator fun get(i: Int): RouteSegment","org.rekotlin.router.Route.get"]},{"name":"inline operator fun minus(segment: RouteSegment): Route","description":"org.rekotlin.router.Route.minus","location":"rekotlin-router/org.rekotlin.router/-route/minus.html","searchKeys":["minus","inline operator fun minus(segment: RouteSegment): Route","org.rekotlin.router.Route.minus"]},{"name":"inline operator fun plus(segment: RouteSegment): Route","description":"org.rekotlin.router.Route.plus","location":"rekotlin-router/org.rekotlin.router/-route/plus.html","searchKeys":["plus","inline operator fun plus(segment: RouteSegment): Route","org.rekotlin.router.Route.plus"]},{"name":"interface Routable","description":"org.rekotlin.router.Routable","location":"rekotlin-router/org.rekotlin.router/-routable/index.html","searchKeys":["Routable","interface Routable","org.rekotlin.router.Routable"]},{"name":"open override fun toString(): String","description":"org.rekotlin.router.Route.toString","location":"rekotlin-router/org.rekotlin.router/-route/to-string.html","searchKeys":["toString","open override fun toString(): String","org.rekotlin.router.Route.toString"]},{"name":"open override fun toString(): String","description":"org.rekotlin.router.RouteSegment.toString","location":"rekotlin-router/org.rekotlin.router/-route-segment/to-string.html","searchKeys":["toString","open override fun toString(): String","org.rekotlin.router.RouteSegment.toString"]},{"name":"val animated: Boolean = true","description":"org.rekotlin.router.NavigationState.animated","location":"rekotlin-router/org.rekotlin.router/-navigation-state/animated.html","searchKeys":["animated","val animated: Boolean = true","org.rekotlin.router.NavigationState.animated"]},{"name":"val animated: Boolean = true","description":"org.rekotlin.router.SetRouteAction.animated","location":"rekotlin-router/org.rekotlin.router/-set-route-action/animated.html","searchKeys":["animated","val animated: Boolean = true","org.rekotlin.router.SetRouteAction.animated"]},{"name":"val args: Any? = null","description":"org.rekotlin.router.RouteSegment.args","location":"rekotlin-router/org.rekotlin.router/-route-segment/args.html","searchKeys":["args","val args: Any? = null","org.rekotlin.router.RouteSegment.args"]},{"name":"val count: Int","description":"org.rekotlin.router.Route.count","location":"rekotlin-router/org.rekotlin.router/-route/count.html","searchKeys":["count","val count: Int","org.rekotlin.router.Route.count"]},{"name":"val id: String","description":"org.rekotlin.router.RouteSegment.id","location":"rekotlin-router/org.rekotlin.router/-route-segment/id.html","searchKeys":["id","val id: String","org.rekotlin.router.RouteSegment.id"]},{"name":"val route: Route","description":"org.rekotlin.router.NavigationState.route","location":"rekotlin-router/org.rekotlin.router/-navigation-state/route.html","searchKeys":["route","val route: Route","org.rekotlin.router.NavigationState.route"]},{"name":"val route: Route","description":"org.rekotlin.router.SetRouteAction.route","location":"rekotlin-router/org.rekotlin.router/-set-route-action/route.html","searchKeys":["route","val route: Route","org.rekotlin.router.SetRouteAction.route"]},{"name":"val segments: List<RouteSegment>","description":"org.rekotlin.router.Route.segments","location":"rekotlin-router/org.rekotlin.router/-route/segments.html","searchKeys":["segments","val segments: List<RouteSegment>","org.rekotlin.router.Route.segments"]}]
